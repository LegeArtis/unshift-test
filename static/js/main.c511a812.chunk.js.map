{"version":3,"sources":["components/blogstore-service-context/blogstore-service-context.js","components/hoc/with-blogstore-service.js","components/spiner/spiner.js","components/pages/all-blog/all-blog.js","actions/index.js","components/error-indicator/error-indicator.js","components/pages/blog-item-view/blog-item-view.js","components/pages/blog-item/blog-item.js","components/pages/app-header/app-header.js","components/pages/add-blog/add-blog.js","components/pages/edit-blog/edit-blog.js","components/app/app.js","services/blog-service.js","reducers/index.js","store.js","components/error-boundry/error-boundry.js","index.js"],"names":["React","createContext","BlogstoreServiceProvider","Provider","BlogstoreServiceConsumer","Consumer","withBlogstoreService","Wrapped","props","blogstoreService","Spinner","className","AllBlog","state","blogReady","this","blogLoaded","getAllBlog","then","value","setState","list","blog","map","item","index","key","to","id","title","Component","mapDispatchToProps","newBlog","type","payload","connect","ErrorIndicator","text","BlogItemView","onSubmit","deleteBlog","comments","body","onClick","required","name","placeholder","BlogItem","blogItem","undefined","errorLink","redirect","e","blogId","ok","preventDefault","comment","postId","target","addComment","getBlogWithComments","AppHeader","AddBlog","post","addBlog","onChange","EditBlog","edited","editBlog","App","path","exact","component","match","params","BlogService","url","fetch","json","data","method","headers","JSON","stringify","initialState","reducer","actions","store","createStore","ErrorBoundry","hasError","error","errorInfo","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c511a812.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst {\r\n    Provider: BlogstoreServiceProvider,\r\n    Consumer: BlogstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport  {\r\n    BlogstoreServiceProvider,\r\n    BlogstoreServiceConsumer\r\n}\r\n","import React from 'react';\r\nimport { BlogstoreServiceConsumer } from \"../blogstore-service-context/blogstore-service-context\";\r\n\r\nconst withBlogstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BlogstoreServiceConsumer>\r\n                {\r\n                    (blogstoreService) => {\r\n                        return (\r\n                            <Wrapped { ...props} blogstoreService={blogstoreService} />\r\n                        );\r\n                    }\r\n                }\r\n            </BlogstoreServiceConsumer>\r\n            );\r\n    }\r\n};\r\n\r\nexport { withBlogstoreService };\r\n","import React from 'react';\r\nimport './spiner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-disk\">\r\n                <div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport './all-blog.css';\r\nimport { withBlogstoreService } from \"../../hoc/with-blogstore-service\";\r\nimport Spinner from \"../../spiner/spiner\";\r\nimport { blogLoaded } from \"../../../actions\";\r\nimport  { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AllBlog extends Component {\r\n    state = {\r\n      blogReady: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { blogstoreService, blogLoaded } = this.props;\r\n        blogstoreService.getAllBlog()\r\n            .then(value => {\r\n                blogLoaded(value);\r\n                this.setState( { blogReady: true });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.blogReady) {\r\n            return <Spinner/>;\r\n        }\r\n\r\n        const list = this.props.blog.map((item, index) => {\r\n           return (\r\n               <li className='all_blog_element' key={index}>\r\n                   <Link to={`/posts/${item.id}`}>\r\n                           {item.title}\r\n                   </Link>\r\n               </li>\r\n           );\r\n        });\r\n\r\n        return (\r\n            <ul className='all_blog_list'>\r\n                { list }\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ blog }) => {\r\n  return { blog };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    blogLoaded\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n    withBlogstoreService()(AllBlog)\r\n);\r\n","\r\nconst blogLoaded = (newBlog) => {\r\n    return {\r\n        type: 'BLOG_LOADED',\r\n        payload: newBlog\r\n    };\r\n};\r\n\r\nexport {\r\n    blogLoaded\r\n}\r\n","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = ({ text = 'Error Indicator'}) => {\r\n    return <div className='error'>\r\n        { text }\r\n    </div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from 'react';\r\nimport './blog-item-view.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BlogItemView extends Component {\r\n\r\n    render() {\r\n        const { blog, onSubmit, deleteBlog } = this.props;\r\n        const comments = blog.comments.map((item, index) => {\r\n            return (\r\n                <li className='comments_li' key={index}>\r\n                    {item.body}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='blog_view_block'>\r\n                <div className='blog_view_edit_block'>\r\n                    <button className='blog_view_edit_btn'>\r\n                        <Link to={`/edit/${blog.id}`}>edit</Link>\r\n                    </button>\r\n                    <button className='blog_view_edit_btn' onClick={deleteBlog}>delete</button>\r\n                </div>\r\n                <h1 className='blog_view_header'> { blog.title } </h1>\r\n                <p className='blog_view_body'> {blog.body} </p>\r\n                <h2 className='blog_view_header'>Comments</h2>\r\n                <ul>\r\n                    {comments}\r\n                </ul>\r\n                <form className='comments_form' onSubmit={onSubmit}>\r\n                    <textarea className='blog_view_input' required name='comment' placeholder='comments'/>\r\n                    <input className='blog_view_button' type=\"submit\" value='send'/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogItemView;\r\n","import React, { Component } from 'react';\r\nimport './blog-item.css';\r\nimport Spinner from \"../../spiner/spiner\";\r\nimport { withBlogstoreService } from \"../../hoc/with-blogstore-service\";\r\nimport ErrorIndicator from \"../../error-indicator/error-indicator\";\r\nimport BlogItemView from \"../blog-item-view/blog-item-view\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass BlogItem extends Component {\r\n    state = {\r\n        blogReady: false,\r\n        blogItem: undefined,\r\n        errorLink: false,\r\n        redirect: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { blogstoreService, blogId } = this.props;\r\n        blogstoreService.getBlogWithComments(blogId)\r\n            .then(value => {\r\n                if (value.title) {\r\n                    this.setState({\r\n                        blogReady: true,\r\n                        blogItem: value\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        blogReady: true,\r\n                        errorLink: true\r\n                    });\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    deleteBlog = (e) => {\r\n        const { blogstoreService, blogId } = this.props;\r\n        blogstoreService.deleteBlog(blogId)\r\n            .then(value => {\r\n                if (value.ok) {\r\n                    this.setState({ redirect : true })\r\n                }\r\n            });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const comment = {\r\n           postId: this.state.blogItem.id,\r\n           body: e.target.comment.value\r\n        };\r\n        this.props.blogstoreService.addComment(comment)\r\n            .then(value => {\r\n                if (value.ok) {\r\n                    this.setState(({ blogItem }) => {\r\n                        return {\r\n                            blogItem: {...blogItem, comments: [...blogItem.comments, comment]}\r\n                        }\r\n\r\n                    })\r\n                }\r\n            });\r\n\r\n        e.target.comment.value = '';\r\n\r\n    };\r\n\r\n    render() {\r\n        const { blogReady, blogItem, errorLink, redirect } = this.state;\r\n        if (!blogReady) {\r\n            return <Spinner />;\r\n        }\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        if ( errorLink) {\r\n            return <ErrorIndicator\r\n                text='I can not download this blog. Check link or it is problem with our server :('/>;\r\n        }\r\n\r\n        return <BlogItemView blog={blogItem} onSubmit={this.onSubmit}\r\n                             deleteBlog={this.deleteBlog} />;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default withBlogstoreService()(BlogItem);\r\n","import React from 'react';\r\nimport './app-header.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <div className='app_header'>\r\n            <Link to={`/`}>\r\n                <h1 className='app_link'>All blog </h1>\r\n            </Link>\r\n            <Link to={`/add-blog`}>\r\n                <h1 className='app_link'>Add blog </h1>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from 'react';\r\nimport  './add-blog.css';\r\nimport { withBlogstoreService } from \"../../hoc/with-blogstore-service\";\r\n\r\nclass AddBlog extends Component {\r\n    state = {\r\n        title: '',\r\n        text: ''\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const post = {\r\n          title: e.target.title.value,\r\n          body: e.target.text.value\r\n      };\r\n      this.props.blogstoreService.addBlog(post)\r\n          .then(value => {\r\n              if (value.ok) {\r\n                  this.setState({\r\n                      title: '',\r\n                      text: ''\r\n                  });\r\n              }\r\n          });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState( {\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { title, text } = this.state;\r\n        return (\r\n            <form className='add_blog_form' onSubmit={this.onSubmit}>\r\n                <input className='add_blog_title center' value={title} onChange={this.onChange}\r\n                       type=\"text\" required name='title' placeholder='title'/>\r\n                <textarea className='add_blog_text center' value={text} onChange={this.onChange}\r\n                          name=\"text\" required placeholder='blog text' />\r\n                <input className='add_blog_button center' type=\"submit\" value='add blog'/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withBlogstoreService()(AddBlog);\r\n","import React, { Component } from \"react\";\r\nimport './edit-blog.css';\r\nimport { withBlogstoreService } from \"../../hoc/with-blogstore-service\";\r\nimport ErrorIndicator from \"../../error-indicator/error-indicator\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass EditBlog extends Component {\r\n    state = {\r\n        title: '',\r\n        text: '',\r\n        id: undefined,\r\n        errorLink: false,\r\n        edited: false\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const post = {\r\n            title: e.target.title.value,\r\n            body: e.target.text.value\r\n        };\r\n        this.props.blogstoreService.editBlog(post, this.state.id)\r\n            .then(value => {\r\n                if (value.ok) {\r\n                   this.setState( { edited: true });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState( {\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { blogstoreService, blogId } = this.props;\r\n        blogstoreService.getBlogWithComments(blogId)\r\n            .then(value => {\r\n                if (value.title) {\r\n                    this.setState({\r\n                        title: value.title,\r\n                        text: value.body,\r\n                        id: value.id\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        errorLink: true\r\n                    });\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { title, text, errorLink, edited, id } = this.state;\r\n\r\n        if (edited) {\r\n            return <Redirect to={`/posts/${id}`}/>\r\n        }\r\n\r\n        if ( errorLink) {\r\n            return <ErrorIndicator\r\n                text='I can not edit this blog. Check link or it is problem with our server :('/>;\r\n        }\r\n\r\n        return (\r\n            <form className='add_blog_form' onSubmit={this.onSubmit}>\r\n                <input className='add_blog_title center' value={title} onChange={this.onChange}\r\n                       type=\"text\" required name='title' placeholder='title'/>\r\n                <textarea className='add_blog_text center' value={text} onChange={this.onChange}\r\n                          name=\"text\" required placeholder='blog text' />\r\n                <input className='add_blog_button center' type=\"submit\" value='edit blog'/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withBlogstoreService()(EditBlog);\r\n","import React from 'react';\r\nimport './app.css';\r\nimport AllBlog from \"../pages/all-blog/all-blog\";\r\nimport { Route } from \"react-router-dom\";\r\nimport BlogItem from \"../pages/blog-item/blog-item\";\r\nimport AppHeader from \"../pages/app-header/app-header\";\r\nimport AddBlog from \"../pages/add-blog/add-blog\";\r\nimport EditBlog from \"../pages/edit-blog/edit-blog\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='main'>\r\n            <AppHeader/>\r\n            <Route path='/' exact component={AllBlog} />\r\n            <Route path='/add-blog' exact component={AddBlog} />\r\n            <Route path='/posts/:id' exact component={({ match }) => {\r\n                return <BlogItem blogId={match.params.id} />; }} />\r\n            <Route path='/edit/:id' exact component={({ match }) => {\r\n                return <EditBlog blogId={match.params.id} />; }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","export default class BlogService {\r\n    url = 'https://bloggy-api.herokuapp.com';\r\n\r\n    getAllBlog() {\r\n        return  fetch(`${this.url}/posts`)\r\n            .then(value => value.json());\r\n    }\r\n\r\n    getBlogWithComments(id) {\r\n        return fetch(`${this.url}/posts/${id}?_embed=comments`)\r\n            .then(value => value.json());\r\n    }\r\n\r\n    addComment(data) {\r\n        return fetch(`${this.url}/comments`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n    addBlog(blog) {\r\n        return fetch(`${this.url}/posts`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(blog)\r\n        });\r\n    }\r\n\r\n    deleteBlog(id) {\r\n        return fetch(`${this.url}/posts/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    editBlog(blog, id) {\r\n        return fetch(`${this.url}/posts/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(blog)\r\n        })\r\n    }\r\n}\r\n","const initialState = {\r\n    blog: []\r\n};\r\n\r\nconst reducer = ( state = initialState, actions) => {\r\n    switch (actions.type) {\r\n        case 'BLOG_LOADED':\r\n            return {\r\n                blog: actions.payload\r\n            };\r\n\r\n        case 'BLOG_DELETE':\r\n            return {\r\n                blog: actions.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n      hasError: false\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator/>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from \"./components/app/app\";\nimport BlogService from \"./services/blog-service\";\nimport store from \"./store\";\nimport ErrorBoundry from \"./components/error-boundry/error-boundry\";\nimport { BlogstoreServiceProvider } from './components/blogstore-service-context/blogstore-service-context';\n\nconst blogstoreService = new BlogService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BlogstoreServiceProvider value={blogstoreService}>\n                <Router>\n                    <App />\n                </Router>\n            </BlogstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}